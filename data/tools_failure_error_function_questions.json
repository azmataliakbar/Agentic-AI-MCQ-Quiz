[
  {
    "question": "failure_error_function in Tools handles:",
    "options": [
      "What happens when a tool fails",
      "Screen brightness",
      "Battery percentage",
      "Hard disk size"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "Why use failure_error_function?",
    "options": [
      "To define custom error handling for tools",
      "To update drivers",
      "To restart Wi-Fi",
      "To install new fonts"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "An example of failure_error_function is:",
    "options": [
      "Returning a default value if the tool fails",
      "Changing wallpaper after error",
      "Shutting down after error",
      "Increasing brightness after error"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "Without failure_error_function:",
    "options": [
      "Agent may crash or produce an error",
      "The computer restarts",
      "Wi-Fi stops working",
      "Printer disconnects"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "failure_error_function improves:",
    "options": [
      "Reliability and resilience of agents",
      "Battery life",
      "Operating system updates",
      "Screen resolution"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "failure_error_function in Tools is used to:",
    "options": [
      "Handle what happens if a tool fails during execution",
      "Check laptop battery health",
      "Detect internet speed",
      "Measure CPU temperature"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "Why is failure_error_function important?",
    "options": [
      "It ensures errors are caught and handled gracefully",
      "It restarts the entire operating system",
      "It increases hardware speed",
      "It updates display drivers"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "Which is an example of using failure_error_function?",
    "options": [
      "Logging the error and returning a fallback response",
      "Increasing battery charge speed",
      "Changing monitor brightness",
      "Enabling safe mode"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "Without failure_error_function, a tool failure might:",
    "options": [
      "Cause the agent to crash or behave unexpectedly",
      "Shut down the computer BIOS",
      "Reset the internet connection",
      "Lower the speaker volume"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "A developer might customize failure_error_function to:",
    "options": [
      "Retry the tool call or provide a default safe response",
      "Reboot the hardware device",
      "Stop the operating system updates",
      "Encrypt system files"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "What is failure_error_function primarily used for?",
    "options": [
      "Defining custom error handling when a tool fails",
      "Speeding up API calls",
      "Encrypting response payloads",
      "Modifying token sampling"
    ],
    "correct": 0,
    "level": "hard"
  },
  {
    "question": "How does failure_error_function enhance resilience?",
    "options": [
      "By allowing fallback logic instead of abrupt termination",
      "By reducing input size automatically",
      "By caching tokens for reuse",
      "By doubling execution speed"
    ],
    "correct": 0,
    "level": "hard"
  },
  {
    "question": "If failure_error_function is not defined, what is the default behavior?",
    "options": [
      "The agent will surface raw tool errors",
      "The agent will retry with exponential backoff",
      "The agent will disable all tools",
      "The system reboots automatically"
    ],
    "correct": 0,
    "level": "hard"
  },
  {
    "question": "Which scenario best demonstrates failure_error_function?",
    "options": [
      "Redirecting a failed weather API call to a cached response",
      "Changing the description_override",
      "Toggling is_enabled mid-execution",
      "Renaming the tool dynamically"
    ],
    "correct": 0,
    "level": "hard"
  },
  {
    "question": "Why should developers log inside failure_error_function?",
    "options": [
      "To capture insights about recurring failure patterns",
      "To reduce token usage",
      "To auto-enable disabled tools",
      "To rewrite schema dynamically"
    ],
    "correct": 0,
    "level": "hard"
  }
]