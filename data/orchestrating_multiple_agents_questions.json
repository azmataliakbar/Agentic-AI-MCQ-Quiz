[
  {
    "question": "Orchestration means:",
    "options": [
      "Playing music",
      "Coordinating multiple agents",
      "Stopping execution",
      "Adding guardrails"
    ],
    "correct": 1,
    "level": "easy"
  },
  {
    "question": "Why use multiple agents?",
    "options": [
      "Each can specialize in tasks",
      "They run slower",
      "They reduce safety",
      "They remove streaming"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "Example of orchestration:",
    "options": [
      "One agent for weather, another for translation",
      "One agent doing nothing",
      "Only one agent handling everything",
      "Guardrails blocking execution"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "What helps agents work together?",
    "options": [
      "Orchestration logic",
      "Random execution",
      "Guardrails only",
      "API keys"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "Orchestrating multiple agents can improve:",
    "options": [
      "Accuracy and modularity",
      "Confusion in system",
      "Slow responses",
      "Debug errors only"
    ],
    "correct": 0,
    "level": "easy"
  },
  {
    "question": "What does orchestrating multiple agents primarily involve?",
    "options": [
      "Coordinating agents so they can collaborate on complex tasks",
      "Running the operating system in safe mode",
      "Encrypting all agent outputs into binary format",
      "Compressing large datasets before execution"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "Why is orchestration important in multi-agent systems?",
    "options": [
      "It prevents conflicting actions and ensures task alignment",
      "It increases the CPU clock speed",
      "It guarantees permanent data storage",
      "It eliminates the need for configuration files"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "Which is a common method for orchestrating multiple agents?",
    "options": [
      "Using a central controller or coordinator agent",
      "Formatting outputs only in HTML",
      "Running agents on separate physical devices",
      "Storing all prompts in a binary file"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "What is one risk of poorly orchestrated agent collaboration?",
    "options": [
      "Agents may loop or compete, causing inefficiency",
      "The agent system will increase GPU usage",
      "Agents will disable system security features",
      "The operating system will automatically restart"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "In SDK-based frameworks, orchestration logic often manages:",
    "options": [
      "Task allocation, communication flow, and dependency handling",
      "The system’s BIOS configuration",
      "Hardware drivers for external devices",
      "The desktop’s graphical resolution"
    ],
    "correct": 0,
    "level": "medium"
  },
  {
    "question": "In multi-agent orchestration, what is the primary challenge?",
    "options": [
      "Ensuring agents operate in complete isolation",
      "Coordinating agent roles and avoiding conflicting actions",
      "Reducing memory size of each agent",
      "Disabling tool integration for consistency"
    ],
    "correct": 1,
    "level": "hard"
  },
  {
    "question": "Which strategy is often used to manage orchestration across multiple agents?",
    "options": [
      "Static handoff only",
      "Centralized coordinator or orchestrator agent",
      "Disabling guardrails",
      "Cloning every agent"
    ],
    "correct": 1,
    "level": "hard"
  },
  {
    "question": "What problem can arise when multiple agents share the same context without orchestration?",
    "options": [
      "Improved latency",
      "Context leakage and contradictory outputs",
      "Reduced costs",
      "Better guardrail enforcement"
    ],
    "correct": 1,
    "level": "hard"
  },
  {
    "question": "Which pattern is common in orchestrating specialized agents?",
    "options": [
      "Master-worker or manager-worker design",
      "Hardcoding a single agent only",
      "Always streaming outputs",
      "Forcing agents to share identical IDs"
    ],
    "correct": 0,
    "level": "hard"
  },
  {
    "question": "Why might orchestration use priority-based scheduling?",
    "options": [
      "To reduce context window size",
      "To resolve conflicting actions by ranking agent outputs",
      "To prevent tool execution",
      "To eliminate tracing"
    ],
    "correct": 1,
    "level": "hard"
  }
]